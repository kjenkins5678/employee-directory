{"version":3,"sources":["components/EmployeeTable/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","className","value","onChange","e","target","undefined","placeholder","EmployeeTable","columns","data","filterTypes","text","rows","id","filterValue","filter","row","rowValue","values","String","toLowerCase","startsWith","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","Wrapper","employees","Header","accessor","Title","props","children","App","ReactDOM","document","getElementById"],"mappings":"k0CAIA,SAASA,EAAT,GAII,IAHFC,EAGC,EAHDA,sBACAC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAEMC,EAAQH,EAAsBI,OAEpC,OACE,yBAAKC,UAAU,UAAf,UACU,IACR,2BACEC,MAAOL,GAAgB,GACvBM,SAAU,SAAAC,GACRN,EAAgBM,EAAEC,OAAOH,YAASI,IAEpCC,YAAW,UAAKR,EAAL,kBAyFJS,MAnFf,YAA2C,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAC1BC,EAAc,CAChBC,KAAM,SAACC,EAAMC,EAAIC,GACf,OAAOF,EAAKG,QAAO,SAAAC,GACjB,IAAMC,EAAWD,EAAIE,OAAOL,GAC5B,YAAoBR,IAAbY,GACHE,OAAOF,GACJG,cACAC,WAAWF,OAAOL,GAAaM,oBARN,EAuBpCE,mBACF,CACEd,UACAC,OACAC,eAEFa,aACAC,kBACAC,aAhBAC,EAfsC,EAetCA,cACAC,EAhBsC,EAgBtCA,kBACAC,EAjBsC,EAiBtCA,aACAhB,EAlBsC,EAkBtCA,KACAiB,EAnBsC,EAmBtCA,WACAC,EApBsC,EAoBtCA,MACAnC,EArBsC,EAqBtCA,sBACAE,EAtBsC,EAsBtCA,gBAYF,OACE,oCACI,kBAACH,EAAD,CACEC,sBAAuBA,EACvBC,aAAckC,EAAMlC,aACpBC,gBAAiBA,IAErB,2CAAW6B,IAAX,CAA4B1B,UAAU,UACpC,+BACG4B,EAAaG,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAE7B,uBAAQA,EAAOC,eAAeD,EAAOE,wBAClCF,EAAOG,OAAO,UACf,8BACGH,EAAOI,SACJJ,EAAOK,aACL,gBACA,gBACF,aAOhB,0BAAWb,IACRf,EAAKmB,KACJ,SAACf,EAAKyB,GAEJ,OADAZ,EAAWb,GAET,uBAAQA,EAAI0B,cACT1B,EAAI2B,MAAMZ,KAAI,SAAAa,GACb,OACE,uBAAQA,EAAKC,eAAiBD,EAAKN,OAAO,kBAQ1D,6BACA,yBAAKzB,GAAG,kBAAR,WAAkCD,EAAKb,OAAvC,W,aCzES+C,MAzBf,WAEE,IAeMrC,EAAOsC,EACf,OACE,kBAAC,EAAD,CAAevC,QAjBC,CACd,CACEwC,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,aACRC,SAAU,cAEZ,CACED,OAAQ,WACRC,SAAU,aAMmBxC,KAAMA,K,MCjB1ByC,MAJf,SAAeC,GACb,OAAO,wBAAInD,UAAU,SAASmD,EAAMC,WCUvBC,MAVf,WAEI,OACE,oCACA,kBAAC,EAAD,2BACA,kBAAC,EAAD,Q,MCJNC,IAAShB,OAAO,kBAAC,EAAD,MAASiB,SAASC,eAAe,W","file":"static/js/main.b56ce4bf.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTable, useGlobalFilter, useSortBy, useFilters } from 'react-table'\nimport \"./style.css\";\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length\n\n  return (\n    <div className='filter'>\n      Search:{' '}\n      <input\n        value={globalFilter || ''}\n        onChange={e => {\n          setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`${count} records...`}\n      />\n    </div>\n  )\n}\n\nfunction EmployeeTable({ columns, data }) {\n  const filterTypes = {\n      text: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n      filterTypes,\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy\n  )\n\n  return (\n    <>\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n      <table {...getTableProps()} className='table'>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Sorting\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' ðŸ”½'\n                        : ' ðŸ”¼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                    )\n                  })}\n                </tr>\n              )}\n          )}\n        </tbody>\n      </table>\n      <br />\n      <div id='rows-displayed'>Showing {rows.length} rows</div>\n    </>\n  )\n}\n\nexport default EmployeeTable;\n","import React from \"react\";\nimport EmployeeTable from \"../EmployeeTable\";\nimport employees from \"../../employees.json\"\nimport \"./style.css\";\n\nfunction Wrapper() {\n\n  const columns = [\n    {\n      Header: 'Name',\n      accessor: 'name',\n    },\n    {\n      Header: 'Occupation',\n      accessor: 'occupation',\n    },\n    {\n      Header: 'Location',\n      accessor: 'location',\n    }\n  ];\n\n  const data = employees\nreturn (\n  <EmployeeTable columns={columns} data={data}>\n    \n  </EmployeeTable>\n  );\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\n\nfunction App() {\n\n    return (\n      <>\n      <Title>Employee Directory</Title>\n      <Wrapper></Wrapper>\n      </>\n    );\n  }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}